{"version":3,"sources":["utils/editMode.js","hooks/withEdit.jsx","component/editable/Avatar.jsx","component/editable/Link.jsx","component/editable/Typography.jsx","component/course/course-read.jsx","utils/validation.js","component/course/course-edit.jsx","page/CoursePage.jsx","component/course-list/course-list-read.jsx","component/course-list/course-list-edit.jsx","page/CourseListPage.jsx","page/Users.jsx","template/SideMenu.jsx","template/UserMenu.jsx","template/Template.jsx","Theme.js","serviceWorker.js","index.jsx","App.jsx"],"names":["EDIT_KEY","Component","withRouter","location","props","staticContext","match","history","isEdit","search","edit","URLSearchParams","get","isEditMode","AvatarEdit","React","useState","open","setOpen","handleClose","Dialog","fullWidth","onClose","disableTypography","IconButton","aria-label","onClick","component","TextField","name","Avatar","withEdit","children","Typography","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","listItem","borderBottomColor","grey","borderBottomWidth","borderBottomStyle","CourseRead","course","renderTopicAction","classes","topics","sort","a","b","order","List","className","map","topic","index","Link","to","id","key","ListItem","alignItems","ListItemAvatar","alt","src","image","ListItemText","primary","defaultProps","Yup","max","required","schema","shape","of","validationSchema","CourseEdit","ActionButton","values","setFieldValue","arrayHelpers","size","length","swipDown","fontSize","swipUp","remove","deleteCourse","FormContent","Button","variant","color","push","initialValues","onSubmit","alert","JSON","stringify","render","submitForm","useParams","courses","find","CourseList","renderCourseAction","Users","paragraph","drawer","flexShrink","drawerPaper","drawerHeader","display","padding","spacing","mixins","toolbar","justifyContent","SideMenu","handleDrawerClose","useTheme","Drawer","anchor","direction","Divider","text","button","ListItemIcon","bigAvatar","margin","height","StyledMenu","withStyles","border","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","main","common","white","MenuItem","UserMenu","anchorEl","setAnchorEl","useHistory","event","currentTarget","keepMounted","Boolean","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","content","flexGrow","contentShift","title","Template","CssBaseline","AppBar","position","clsx","Toolbar","edge","noWrap","createMuiTheme","window","hostname","ReactDOM","ThemeProvider","path","CoursePage","CourseListPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9172020b.chunk.js","sourcesContent":["\nconst EDIT_KEY = 'edit'\n\nexport function isEditMode(search) {\n  const edit = new URLSearchParams(search).get(EDIT_KEY)\n  return !!edit && edit === 'true'\n}\n","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {isEditMode} from '../utils'\n\nexport default Component => {\n  return withRouter(({location, staticContext, match, history, ...props}) => {\n    const isEdit = isEditMode(location.search)\n    return <Component edit={isEdit} {...props} />\n  })\n}\n","import { TextField } from 'formik-material-ui'\nimport Avatar from '@material-ui/core/Avatar'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport React from 'react'\nimport withEdit from '../../hooks/withEdit'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Field } from 'formik'\n\nconst AvatarEdit = props => {\n  const [open, setOpen] = React.useState(false)\n  const onClick = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n\n  return (\n    <>\n      <Dialog fullWidth={true} onClose={handleClose} open={open}>\n        <MuiDialogTitle disableTypography>\n          <IconButton aria-label='close' onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </MuiDialogTitle>\n        <Field component={TextField} name={props.name} />\n      </Dialog>\n      <Avatar {...props} onClick={onClick} />\n    </>\n  )\n}\n\nexport default withEdit(({ edit, ...props }) =>\n  edit ? <AvatarEdit {...props} /> : <Avatar {...props} />\n)\n","import React, {Fragment} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport withEdit from '../../hooks/withEdit'\n\nexport default withEdit(({edit, ...props}) => {\n  return edit ? <Fragment children={props.children} /> : <Link {...props} />\n})\n","import Typography from '@material-ui/core/Typography'\nimport { Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport React from 'react'\nimport withEdit from '../../hooks/withEdit'\n\nexport default withEdit(({ edit, ...props }) => {\n  return edit ? <Field component={TextField} name={props.name} /> : <Typography {...props} />\n})\n","import List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\nimport React from 'react'\nimport Avatar from '../editable/Avatar'\nimport Link from '../editable/Link'\nimport Typography from '../editable/Typography'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    borderBottomColor: theme.palette.grey[400],\n    borderBottomWidth: 1,\n    borderBottomStyle: 'solid'\n  }\n}))\n\nexport default function CourseRead({ course, renderTopicAction }) {\n  const classes = useStyles()\n  course.topics.sort((a, b) => (a.order > b.order ? 1 : -1))\n\n  return (\n    <>\n      Course: {course.name}\n      <List className={classes.root}>\n        {course.topics.map((topic, index) => (\n          <Link to={`/topic/${topic.id}`} key={topic.id}>\n            <ListItem className={classes.listItem} alignItems='flex-start'>\n              <ListItemAvatar>\n                <Avatar alt='Remy Sharp' src={topic.image} name={`course.topics[${index}].image`} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={\n                  <Typography name={`course.topics[${index}].name`}>{topic.name}</Typography>\n                }\n              />\n              {renderTopicAction(topic, index)}\n              <ArrowForwardIosIcon />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </>\n  )\n}\n\nCourseRead.defaultProps = {\n  renderTopicAction: () => {}\n}\n","import * as Yup from 'yup'\n\nexport default {\n  course: {\n    name: Yup.string()\n      .max(15, 'Must be 15 characters or less')\n      .required('Required'),\n    image: Yup.string()\n      // .max(15, 'Must be 15 characters or less')\n      .required('Required')\n  }\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { FieldArray, Form, Formik } from 'formik'\nimport React from 'react'\nimport * as Yup from 'yup'\nimport validationSchema from '../../utils/validation'\nimport CourseRead from './course-read'\nimport Button from '@material-ui/core/Button'\n\nconst schema = Yup.object().shape({\n  course: Yup.object().shape({\n    topics: Yup.array().of(\n      Yup.object().shape({\n        name: validationSchema.course.name,\n        image: validationSchema.course.image\n      })\n    )\n  })\n})\n\nexport default function CourseEdit({ course, edit }) {\n  const swipUp = (course, index, setFieldValue) => {\n    if (index > 0) {\n      setFieldValue(`course.topics[${index}].order`, course.topics[index - 1].order)\n      setFieldValue(`course.topics[${index - 1}].order`, course.topics[index].order)\n    }\n  }\n\n  const swipDown = (course, index, setFieldValue) => {\n    if (index < course.topics.length - 1) {\n      setFieldValue(`course.topics[${index}].order`, course.topics[index + 1].order)\n      setFieldValue(`course.topics[${index + 1}].order`, course.topics[index].order)\n    }\n  }\n\n  const deleteCourse = (course, arrayHelpers, index) => {\n    arrayHelpers.remove(index)\n  }\n\n  const ActionButton = ({ values, index, setFieldValue, arrayHelpers }) => (\n    <>\n      <IconButton size='small' onClick={() => swipDown(values.course.topics, index, setFieldValue)}>\n        <ArrowDownwardIcon fontSize='inherit' />\n      </IconButton>\n      <IconButton size='small' onClick={() => swipUp(values.course.topics, index, setFieldValue)}>\n        <ArrowUpwardIcon fontSize='inherit' />\n      </IconButton>\n      <IconButton\n        size='small'\n        onClick={() => deleteCourse(values.course.topics, arrayHelpers, index)}\n      >\n        <DeleteIcon fontSize='inherit' />\n      </IconButton>\n    </>\n  )\n\n  const FormContent = props => (\n    <>\n      <CourseRead\n        course={props.values.course}\n        renderTopicAction={(course, index) => <ActionButton index={index} {...props} />}\n      />\n      <Button\n        variant='contained'\n        color='secondary'\n        onClick={() =>\n          props.arrayHelpers.push({\n            id: props.values.course.topics.length + 1,\n            name: '',\n            image: '',\n            order: props.values.course.topics.length\n          })\n        }\n      >\n        Add a topic\n      </Button>\n    </>\n  )\n\n  return (\n    <Formik\n      initialValues={{ course: course }}\n      onSubmit={values => alert(JSON.stringify(values, null, 2))}\n      validationSchema={schema}\n      render={({ submitForm, ...props }) => (\n        <Form>\n          <FieldArray\n            name='course.topics'\n            render={arrayHelpers => <FormContent arrayHelpers={arrayHelpers} {...props} />}\n          />\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() => {\n              debugger\n              submitForm()\n            }}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    ></Formik>\n  )\n}\n","import React from 'react'\nimport courses from '../data.json'\nimport CourseRead from '../component/course/course-read'\nimport CourseEdit from '../component/course/course-edit'\nimport withEdit from '../hooks/withEdit.jsx'\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from 'react-router-dom'\n\nexport default withEdit(props => {\n  const { id } = useParams()\n  const course = courses.find(course => course.id == id)\n  return !props.edit ? (\n    <CourseRead course={course} {...props} />\n  ) : (\n    <CourseEdit course={course} {...props} />\n  )\n})\n","import List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\nimport React from 'react'\nimport Avatar from '../editable/Avatar'\nimport Link from '../editable/Link'\nimport Typography from '../editable/Typography'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    borderBottomColor: theme.palette.grey[400],\n    borderBottomWidth: 1,\n    borderBottomStyle: 'solid'\n  }\n}))\n\nexport default function CourseList({ courses, renderCourseAction }) {\n  const classes = useStyles()\n  courses = courses.sort((a, b) => (a.order > b.order ? 1 : -1))\n\n  return (\n    <List className={classes.root}>\n      {courses.map((course, index) => (\n        <Link to={`/course/${course.id}`} key={course.id}>\n          <ListItem className={classes.listItem} alignItems='flex-start'>\n            <ListItemAvatar>\n              <Avatar alt='Remy Sharp' src={course.image} name={`courses[${index}].image`} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={<Typography name={`courses[${index}].name`}>{course.name}</Typography>}\n            />\n            {renderCourseAction(course, index)}\n            <ArrowForwardIosIcon />\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  )\n}\n\nCourseList.defaultProps = {\n  renderCourseAction: () => {}\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { FieldArray, Form, Formik } from 'formik'\nimport React from 'react'\nimport * as Yup from 'yup'\nimport validationSchema from '../../utils/validation'\nimport CourseListRead from './course-list-read'\nimport Button from '@material-ui/core/Button'\n\nconst schema = Yup.object().shape({\n  courses: Yup.array().of(\n    Yup.object().shape({\n      name: validationSchema.course.name,\n      image: validationSchema.course.image\n    })\n  )\n})\n\nexport default function CourseList({ courses, edit }) {\n  const swipUp = (courses, index, setFieldValue) => {\n    if (index > 0) {\n      setFieldValue(`courses[${index}].order`, courses[index - 1].order)\n      setFieldValue(`courses[${index - 1}].order`, courses[index].order)\n    }\n  }\n\n  const swipDown = (courses, index, setFieldValue) => {\n    if (index < courses.length - 1) {\n      setFieldValue(`courses[${index}].order`, courses[index + 1].order)\n      setFieldValue(`courses[${index + 1}].order`, courses[index].order)\n    }\n  }\n\n  const deleteCourse = (courses, arrayHelpers, index) => {\n    arrayHelpers.remove(index)\n  }\n\n  const ActionButton = ({ values, index, setFieldValue, arrayHelpers }) => (\n    <>\n      <IconButton size='small' onClick={() => swipDown(values.courses, index, setFieldValue)}>\n        <ArrowDownwardIcon fontSize='inherit' />\n      </IconButton>\n      <IconButton size='small' onClick={() => swipUp(values.courses, index, setFieldValue)}>\n        <ArrowUpwardIcon fontSize='inherit' />\n      </IconButton>\n      <IconButton size='small' onClick={() => deleteCourse(values.courses, arrayHelpers, index)}>\n        <DeleteIcon fontSize='inherit' />\n      </IconButton>\n    </>\n  )\n\n  const FormContent = props => (\n    <>\n      <CourseListRead\n        courses={props.values.courses}\n        renderCourseAction={(course, index) => <ActionButton index={index} {...props} />}\n      />\n      <Button\n        variant='contained'\n        color='secondary'\n        onClick={() =>\n          props.arrayHelpers.push({\n            id: courses.length + 1,\n            name: '',\n            image: '',\n            order: courses.length\n          })\n        }\n      >\n        Add a course\n      </Button>\n    </>\n  )\n\n  return (\n    <Formik\n      initialValues={{ courses: courses }}\n      onSubmit={values => alert(JSON.stringify(values, null, 2))}\n      validationSchema={schema}\n      render={({ submitForm, ...props }) => (\n        <Form>\n          <FieldArray\n            name='courses'\n            render={arrayHelpers => <FormContent arrayHelpers={arrayHelpers} {...props} />}\n          />\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() => {\n              debugger\n              submitForm()\n            }}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    ></Formik>\n  )\n}\n","import React from 'react'\nimport courses from '../data.json'\nimport CourseList from '../component/course-list/course-list-read'\nimport CourseListEdit from '../component/course-list/course-list-edit'\nimport withEdit from '../hooks/withEdit.jsx'\n\nexport default withEdit(props =>\n  !props.edit ? (\n    <CourseList courses={courses} {...props} />\n  ) : (\n    <CourseListEdit courses={courses} {...props} />\n  )\n)\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Users() {\n  return (\n    <div>\n        <Typography paragraph>\n          users saas asd fasd\n        </Typography>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport MailIcon from '@material-ui/icons/Mail'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}))\n\nexport default function SideMenu({open, handleDrawerClose}) {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='left'\n      open={open}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? (\n            <ChevronLeftIcon />\n          ) : (\n            <ChevronRightIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <Link to='/' key={text}>\n            <ListItem button>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  )\n}\n","import React from 'react'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {makeStyles, withStyles} from '@material-ui/core/styles'\nimport DraftsIcon from '@material-ui/icons/Drafts'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport {useHistory} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  bigAvatar: {\n    margin: 10,\n    width: 30,\n    height: 30\n  }\n}))\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserMenu() {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const history = useHistory()\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const enterEditMode = () => {\n    history.push('?edit=true')\n  }\n\n  const existEditMode = () => {\n    history.push('?edit=false')\n  }\n\n  return (\n    <div>\n      <Avatar\n        alt='Amr Sharp'\n        src='/logo192.png'\n        className={classes.bigAvatar}\n        onClick={handleClick}\n      />\n      <StyledMenu\n        id='customized-menu'\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem onClick={enterEditMode}>\n          <ListItemIcon>\n            <InboxIcon fontSize='small' />\n          </ListItemIcon>\n          <ListItemText primary='Inbox' />\n        </StyledMenuItem>\n        <StyledMenuItem onClick={existEditMode}>\n          <ListItemIcon>\n            <SendIcon fontSize='small' />\n          </ListItemIcon>\n          <ListItemText primary='Sent mail' />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <DraftsIcon fontSize='small' />\n          </ListItemIcon>\n          <ListItemText primary='Drafts' />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <InboxIcon fontSize='small' />\n          </ListItemIcon>\n          <ListItemText primary='Inbox' />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport { Link } from 'react-router-dom'\n\nimport clsx from 'clsx'\n\nimport SideMenu from './SideMenu'\nimport UserMenu from './UserMenu'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  title: {\n    flexGrow: 1\n  }\n}))\n\nexport default function Template(props) {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title} noWrap>\n            <Link to='/'>Persistent drawer</Link>\n          </Typography>\n          <UserMenu />\n        </Toolbar>\n      </AppBar>\n      <SideMenu open={open} handleDrawerClose={handleDrawerClose} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {props.children}\n      </main>\n    </div>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { ThemeProvider } from '@material-ui/core/styles'\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CoursePage from './page/CoursePage'\nimport CourseListPage from './page/CourseListPage'\nimport Users from './page/Users'\nimport Template from './template/Template'\nimport theme from './Theme'\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Template>\n          <Switch>\n            <Route path='/course/:id'>\n              <CoursePage />\n            </Route>\n            <Route path='/users'>\n              <Users />\n            </Route>\n            <Route path='/'>\n              <CourseListPage />\n            </Route>\n          </Switch>\n        </Template>\n      </Router>\n    </ThemeProvider>\n  )\n}\n"],"sourceRoot":""}